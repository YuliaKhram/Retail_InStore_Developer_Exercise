{"ast":null,"code":"var _jsxFileName = \"/Users/yuliakhramtsova/Desktop/ReactProjects/retail-instore-exercise/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Cities from \"./data\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [activeCity, setActiveCity] = useState(0);\n\n  const handleClick = e => {\n    setActiveCity(e.target.innerHTML);\n  };\n\n  console.log(activeCity);\n\n  if (activeCity != 0) {\n    let options = {\n      timeZone: \"Africa/Khartoum\",\n      year: \"numeric\",\n      month: \"numeric\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\"\n    },\n        formatter = new Intl.DateTimeFormat([], options);\n    let date = formatter.format(new Date());\n    let time = date.getTime();\n    console.log(time);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cities\",\n      children: Cities.map((city, section) => /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: handleClick,\n        className: activeCity === city.label ? \"active\" : \"\",\n        children: city.label\n      }, section, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), activeCity != 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zX9WG8+sg+SRyGsXssbRqR0xisM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yuliakhramtsova/Desktop/ReactProjects/retail-instore-exercise/src/App.js"],"names":["Cities","useState","App","activeCity","setActiveCity","handleClick","e","target","innerHTML","console","log","options","timeZone","year","month","day","hour","minute","second","formatter","Intl","DateTimeFormat","date","format","Date","time","getTime","map","city","section","label"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,CAAD,CAA5C;;AAEA,QAAMI,WAAW,GAAIC,CAAD,IAAO;AACzBF,IAAAA,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,SAAV,CAAb;AACD,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;;AACA,MAAGA,UAAU,IAAI,CAAjB,EAAmB;AACjB,QAAIQ,OAAO,GAAG;AACZC,MAAAA,QAAQ,EAAE,iBADE;AAEZC,MAAAA,IAAI,EAAE,SAFM;AAGZC,MAAAA,KAAK,EAAE,SAHK;AAIZC,MAAAA,GAAG,EAAE,SAJO;AAKZC,MAAAA,IAAI,EAAE,SALM;AAMZC,MAAAA,MAAM,EAAE,SANI;AAOZC,MAAAA,MAAM,EAAE;AAPI,KAAd;AAAA,QASAC,SAAS,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,EAAxB,EAA4BV,OAA5B,CATZ;AAUF,QAAIW,IAAI,GAAGH,SAAS,CAACI,MAAV,CAAiB,IAAIC,IAAJ,EAAjB,CAAX;AACA,QAAIC,IAAI,GAAGH,IAAI,CAACI,OAAL,EAAX;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAYe,IAAZ;AACC;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACGzB,MAAM,CAAC2B,GAAP,CAAW,CAACC,IAAD,EAAOC,OAAP,kBACV;AAEE,QAAA,OAAO,EAAExB,WAFX;AAGE,QAAA,SAAS,EAAEF,UAAU,KAAKyB,IAAI,CAACE,KAApB,GAA4B,QAA5B,GAAuC,EAHpD;AAAA,kBAKGF,IAAI,CAACE;AALR,SACOD,OADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAA;AAAA;AAAA;AAAA,YAbF,EAcG1B,UAAU,IAAI,CAAd,iBAAmB;AAAA,gBAAIsB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAdtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAzCQvB,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport Cities from \"./data\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [activeCity, setActiveCity] = useState(0);\n\n  const handleClick = (e) => {\n    setActiveCity(e.target.innerHTML);\n  };\n  console.log(activeCity);\n  if(activeCity != 0){\n    let options = {\n      timeZone: \"Africa/Khartoum\",\n      year: \"numeric\",\n      month: \"numeric\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\",\n    },\n    formatter = new Intl.DateTimeFormat([], options);\n  let date = formatter.format(new Date());\n  let time = date.getTime();\n  console.log(time);\n  }\n  \n  return (\n    <div className=\"App\">\n      <div className=\"cities\">\n        {Cities.map((city, section) => (\n          <p\n            key={section}\n            onClick={handleClick}\n            className={activeCity === city.label ? \"active\" : \"\"}\n          >\n            {city.label}\n          </p>\n        ))}\n      </div>\n\n      <hr />\n      {activeCity != 0 && <p>{time}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}