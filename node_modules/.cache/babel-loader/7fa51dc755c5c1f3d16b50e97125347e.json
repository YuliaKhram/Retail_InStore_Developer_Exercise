{"ast":null,"code":"var _jsxFileName = \"/Users/yuliakhramtsova/Desktop/ReactProjects/retail-instore-exercise/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Cities from \"./data\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [activeCity, setActiveCity] = useState(0);\n\n  const handleClick = e => {\n    setActiveCity(e.target.innerHTML);\n  };\n\n  console.log(activeCity);\n  let options = {\n    timeZone: \"Africa/Khartoum\",\n    year: \"numeric\",\n    month: \"numeric\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\"\n  },\n      formatter = new Intl.DateTimeFormat([], options);\n  let time = formatter.format(new Date());\n  console.log(formatter.format(new Date()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cities\",\n      children: Cities.map((city, section) => /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: handleClick,\n        className: activeCity === city.label ? \"active\" : \"\",\n        children: city.label\n      }, section, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), activeCity != 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formatter.format(new Date())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zX9WG8+sg+SRyGsXssbRqR0xisM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yuliakhramtsova/Desktop/ReactProjects/retail-instore-exercise/src/App.js"],"names":["Cities","useState","App","activeCity","setActiveCity","handleClick","e","target","innerHTML","console","log","options","timeZone","year","month","day","hour","minute","second","formatter","Intl","DateTimeFormat","time","format","Date","map","city","section","label"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,CAAD,CAA5C;;AAEA,QAAMI,WAAW,GAAIC,CAAD,IAAO;AACzBF,IAAAA,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,SAAV,CAAb;AACD,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACA,MAAIQ,OAAO,GAAG;AACVC,IAAAA,QAAQ,EAAE,iBADA;AAEVC,IAAAA,IAAI,EAAE,SAFI;AAGVC,IAAAA,KAAK,EAAE,SAHG;AAIVC,IAAAA,GAAG,EAAE,SAJK;AAKVC,IAAAA,IAAI,EAAE,SALI;AAMVC,IAAAA,MAAM,EAAE,SANE;AAOVC,IAAAA,MAAM,EAAE;AAPE,GAAd;AAAA,MASEC,SAAS,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,EAAxB,EAA4BV,OAA5B,CATd;AAUE,MAAIW,IAAI,GAAGH,SAAS,CAACI,MAAV,CAAiB,IAAIC,IAAJ,EAAjB,CAAX;AACFf,EAAAA,OAAO,CAACC,GAAR,CAAYS,SAAS,CAACI,MAAV,CAAiB,IAAIC,IAAJ,EAAjB,CAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACGxB,MAAM,CAACyB,GAAP,CAAW,CAACC,IAAD,EAAOC,OAAP,kBACV;AAEE,QAAA,OAAO,EAAEtB,WAFX;AAGE,QAAA,SAAS,EAAEF,UAAU,KAAKuB,IAAI,CAACE,KAApB,GAA4B,QAA5B,GAAuC,EAHpD;AAAA,kBAKGF,IAAI,CAACE;AALR,SACOD,OADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAA;AAAA;AAAA;AAAA,YAbF,EAcIxB,UAAU,IAAI,CAAd,iBAAmB;AAAA,gBAAIgB,SAAS,CAACI,MAAV,CAAiB,IAAIC,IAAJ,EAAjB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAdvB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GArCQtB,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport Cities from \"./data\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [activeCity, setActiveCity] = useState(0);\n\n  const handleClick = (e) => {\n    setActiveCity(e.target.innerHTML);\n  };\n  console.log(activeCity);\n  let options = {\n      timeZone: \"Africa/Khartoum\",\n      year: \"numeric\",\n      month: \"numeric\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\",\n    },\n    formatter = new Intl.DateTimeFormat([], options);\n    let time = formatter.format(new Date())\n  console.log(formatter.format(new Date()));\n  return (\n    <div className=\"App\">\n      <div className=\"cities\">\n        {Cities.map((city, section) => (\n          <p\n            key={section}\n            onClick={handleClick}\n            className={activeCity === city.label ? \"active\" : \"\"}\n          >\n            {city.label}\n          </p>\n        ))}\n      </div>\n\n      <hr />\n       {activeCity != 0 && <p>{formatter.format(new Date())}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}